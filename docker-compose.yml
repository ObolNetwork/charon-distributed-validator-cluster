version: "3.8"

x-node-base: &node-base
  # Pegged charon version (update this for each release).
  image: ghcr.io/obolnetwork/charon:v0.3.0
  entrypoint: "${COMPOSE_ENTRYPOINT:-/usr/local/bin/charon}"
  command: "${COMPOSE_COMMAND:-run}"
  env_file: [charon.env,beaconnode.env]
  networks: [cluster]
  depends_on: [bootnode]
  volumes: [.:/charon]

services:
  node0:
    <<: *node-base
    environment:
      CHARON_DATA_DIR: /charon/node0
      CHARON_JAEGER_SERVICE: node0
      CHARON_P2P_EXTERNAL_HOSTNAME: node0
      CHARON_SIMNET_VALIDATOR_MOCK: "false" # Uses Lighthouse VC
    ports:
      - "16002:16002"

  node1:
    <<: *node-base
    environment:
      CHARON_DATA_DIR: /charon/node1
      CHARON_JAEGER_SERVICE: node1
      CHARON_P2P_EXTERNAL_HOSTNAME: node1
      CHARON_SIMNET_VALIDATOR_MOCK: "false" # Uses Teku VC

  node2:
    <<: *node-base
    environment:
      CHARON_DATA_DIR: /charon/node2
      CHARON_JAEGER_SERVICE: node2
      CHARON_P2P_EXTERNAL_HOSTNAME: node2
      CHARON_SIMNET_VALIDATOR_MOCK: "false" # Uses Teku VC

  node3:
    <<: *node-base
    environment:
      CHARON_DATA_DIR: /charon/node3
      CHARON_JAEGER_SERVICE: node3
      CHARON_P2P_EXTERNAL_HOSTNAME: node3
      CHARON_SIMNET_VALIDATOR_MOCK: "false" # Uses Teku VC

  bootnode:
    <<: *node-base
    command: bootnode
    depends_on: []
    environment:
      CHARON_BOOTNODE_HTTP_ADDRESS: 0.0.0.0:16000
      CHARON_DATA_DIR: /charon/bootnode
      CHARON_P2P_BOOTNODES: ""
      CHARON_P2P_EXTERNAL_HOSTNAME: bootnode

  vc0-lh:
    build: lighthouse
    networks: [cluster]
    depends_on: [node0]
    environment:
      NODE: node0
    volumes:
      - .:/charon

  vc1-teku:
    image: consensys/teku:latest
    networks: [cluster]
    depends_on: [node1]
    command: |
      validator-client
      --network=auto
      --beacon-node-api-endpoint="http://node1:16002" 
      --validator-keys="/charon/node1:/charon/node1"
      --validators-proposer-default-fee-recipient="0x0000000000000000000000000000000000000000"
    volumes:
      - .:/charon

  vc2-teku:
    image: consensys/teku:latest
    networks: [ cluster ]
    depends_on: [ node2 ]
    command: |
      validator-client
      --network=auto
      --beacon-node-api-endpoint="http://node2:16002"
      --validator-keys="/charon/node2:/charon/node2"
      --validators-proposer-default-fee-recipient="0x0000000000000000000000000000000000000000"
    volumes:
      - .:/charon

  vc3-teku:
    image: consensys/teku:latest
    networks: [ cluster ]
    depends_on: [ node3 ]
    command: |
      validator-client
      --network=auto
      --beacon-node-api-endpoint="http://node3:16002" 
      --validator-keys="/charon/node3:/charon/node3"
      --validators-proposer-default-fee-recipient="0x0000000000000000000000000000000000000000"
    volumes:
      - .:/charon

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks: [cluster]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks: [cluster]
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/datasource.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/simnet_dash.json:/etc/dashboards/simnet_dash.json

  jaeger:
    image: jaegertracing/all-in-one:latest
    networks: [cluster]
    ports:
      - "16686:16686"

networks:
  cluster:
